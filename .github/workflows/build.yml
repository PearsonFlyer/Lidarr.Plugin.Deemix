name: Build Plugin
on:
  push:
  pull_request:
  release:
    types:
      - published
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  PLUGIN_NAME: Lidarr.Plugin.Deemix
  PLUGIN_VERSION: 1.0.0.${{ github.run_number }}
jobs:
  build:
    strategy:
      matrix:
        framework: [ netcoreapp3.1, net462 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.404
      - name: Update Version Info
        run: |
          sed -i'' -e "s/<AssemblyVersion>[0-9.*]\+<\/AssemblyVersion>/<AssemblyVersion>$PLUGINVERSION<\/AssemblyVersion>/g" src/Directory.Build.props
          sed -i'' -e "s/<AssemblyConfiguration>[\$()A-Za-z-]\+<\/AssemblyConfiguration>/<AssemblyConfiguration>${GITHUB_REF#refs/heads/}<\/AssemblyConfiguration>/g" src/Directory.Build.props
      - name: Build
        run: dotnet publish src/*.sln -c Release -f ${{ matrix.framework }}
      - name: Upload net core
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.framework }}
          path: ./${{ env.PLUGIN_NAME }}.${{ matrix.framework }}.zip
  publish:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact (net462)
        uses: actions/download-artifact@v2
        with:
          name: net462
      - name: Download Artifact (netcoreapp3.1)
        uses: actions/download-artifact@v2
        with:
          name: netcoreapp3.1
      - name: list files
        run: ls -lR
      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.PLUGIN_VERSION }}
          commitish: ${{ env.GITHUB_SHA }}
          draft: true
          prerelease: true
          files: >
            ${{ env.PLUGIN_NAME }}.netcoreapp3.1.zip
            ${{ env.PLUGIN_NAME }}.net462.zip
          gzip: false
